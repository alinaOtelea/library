<?xml version="1.0" encoding="UTF-8"?>
<project name="module_licenta" default="compile.module.licenta">
  <dirname property="module.licenta.basedir" file="${ant.file.module_licenta}"/>
  
  <property name="module.jdk.home.licenta" value="${jdk.home.1.8}"/>
  <property name="module.jdk.bin.licenta" value="${jdk.bin.1.8}"/>
  <property name="module.jdk.classpath.licenta" value="jdk.classpath.1.8"/>
  
  <property name="compiler.args.licenta" value="-encoding UTF-8 -source 8 -target 1.8 ${compiler.args}"/>
  
  <property name="licenta.output.dir" value="${module.licenta.basedir}/target/classes"/>
  <property name="licenta.testoutput.dir" value="${module.licenta.basedir}/target/test-classes"/>
  
  <path id="licenta.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="licenta.module.production.classpath">
    <path refid="${module.jdk.classpath.licenta}"/>
    <path refid="library.jersey-2.2.classpath"/>
    <path refid="library.maven:_javax:javaee-api:7.0.classpath"/>
    <path refid="library.maven:_com.sun.mail:javax.mail:1.5.0.classpath"/>
    <path refid="library.maven:_javax.activation:activation:1.1.classpath"/>
    <path refid="library.maven:_org.springframework.boot:spring-boot-devtools:unknown.classpath"/>
    <path refid="library.maven:_org.projectlombok:lombok:1.16.10.classpath"/>
    <path refid="library.maven:_org.springframework:spring-web:4.3.4.release.classpath"/>
    <path refid="library.maven:_org.springframework:spring-aop:4.3.4.release.classpath"/>
    <path refid="library.maven:_org.springframework:spring-beans:4.3.4.release.classpath"/>
    <path refid="library.maven:_org.springframework:spring-context:4.3.4.release.classpath"/>
    <path refid="library.maven:_org.springframework:spring-expression:4.3.4.release.classpath"/>
    <path refid="library.maven:_org.springframework:spring-core:4.3.4.release.classpath"/>
    <path refid="library.maven:_commons-logging:commons-logging:1.2.classpath"/>
  </path>
  
  <path id="licenta.runtime.production.module.classpath">
    <pathelement location="${licenta.output.dir}"/>
    <path refid="library.jersey-2.2.classpath"/>
    <path refid="library.maven:_javax:javaee-api:7.0.classpath"/>
    <path refid="library.maven:_com.sun.mail:javax.mail:1.5.0.classpath"/>
    <path refid="library.maven:_javax.activation:activation:1.1.classpath"/>
    <path refid="library.maven:_org.springframework.boot:spring-boot-devtools:unknown.classpath"/>
    <path refid="library.maven:_org.projectlombok:lombok:1.16.10.classpath"/>
    <path refid="library.maven:_org.springframework:spring-web:4.3.4.release.classpath"/>
    <path refid="library.maven:_org.springframework:spring-aop:4.3.4.release.classpath"/>
    <path refid="library.maven:_org.springframework:spring-beans:4.3.4.release.classpath"/>
    <path refid="library.maven:_org.springframework:spring-context:4.3.4.release.classpath"/>
    <path refid="library.maven:_org.springframework:spring-expression:4.3.4.release.classpath"/>
    <path refid="library.maven:_org.springframework:spring-core:4.3.4.release.classpath"/>
    <path refid="library.maven:_commons-logging:commons-logging:1.2.classpath"/>
  </path>
  
  <path id="licenta.module.classpath">
    <path refid="${module.jdk.classpath.licenta}"/>
    <pathelement location="${licenta.output.dir}"/>
    <path refid="library.jersey-2.2.classpath"/>
    <path refid="library.maven:_javax:javaee-api:7.0.classpath"/>
    <path refid="library.maven:_com.sun.mail:javax.mail:1.5.0.classpath"/>
    <path refid="library.maven:_javax.activation:activation:1.1.classpath"/>
    <path refid="library.maven:_org.springframework.boot:spring-boot-devtools:unknown.classpath"/>
    <path refid="library.maven:_org.projectlombok:lombok:1.16.10.classpath"/>
    <path refid="library.maven:_org.springframework:spring-web:4.3.4.release.classpath"/>
    <path refid="library.maven:_org.springframework:spring-aop:4.3.4.release.classpath"/>
    <path refid="library.maven:_org.springframework:spring-beans:4.3.4.release.classpath"/>
    <path refid="library.maven:_org.springframework:spring-context:4.3.4.release.classpath"/>
    <path refid="library.maven:_org.springframework:spring-expression:4.3.4.release.classpath"/>
    <path refid="library.maven:_org.springframework:spring-core:4.3.4.release.classpath"/>
    <path refid="library.maven:_commons-logging:commons-logging:1.2.classpath"/>
  </path>
  
  <path id="licenta.runtime.module.classpath">
    <pathelement location="${licenta.testoutput.dir}"/>
    <pathelement location="${licenta.output.dir}"/>
    <path refid="library.jersey-2.2.classpath"/>
    <path refid="library.maven:_javax:javaee-api:7.0.classpath"/>
    <path refid="library.maven:_com.sun.mail:javax.mail:1.5.0.classpath"/>
    <path refid="library.maven:_javax.activation:activation:1.1.classpath"/>
    <path refid="library.maven:_org.springframework.boot:spring-boot-devtools:unknown.classpath"/>
    <path refid="library.maven:_org.projectlombok:lombok:1.16.10.classpath"/>
    <path refid="library.maven:_org.springframework:spring-web:4.3.4.release.classpath"/>
    <path refid="library.maven:_org.springframework:spring-aop:4.3.4.release.classpath"/>
    <path refid="library.maven:_org.springframework:spring-beans:4.3.4.release.classpath"/>
    <path refid="library.maven:_org.springframework:spring-context:4.3.4.release.classpath"/>
    <path refid="library.maven:_org.springframework:spring-expression:4.3.4.release.classpath"/>
    <path refid="library.maven:_org.springframework:spring-core:4.3.4.release.classpath"/>
    <path refid="library.maven:_commons-logging:commons-logging:1.2.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.licenta">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.licenta">
    <patternset refid="excluded.from.module.licenta"/>
  </patternset>
  
  <path id="licenta.module.sourcepath">
    <dirset dir="${module.licenta.basedir}">
      <include name="src/main/java"/>
      <include name="src/main/resources"/>
    </dirset>
  </path>
  
  <path id="licenta.module.test.sourcepath">
    <dirset dir="${module.licenta.basedir}">
      <include name="src/test/java"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.licenta" depends="compile.module.licenta.production,compile.module.licenta.tests" description="Compile module licenta"/>
  
  <target name="compile.module.licenta.production" depends="register.custom.compilers" description="Compile module licenta; production classes">
    <mkdir dir="${licenta.output.dir}"/>
    <javac2 destdir="${licenta.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.licenta}/javac">
      <compilerarg line="${compiler.args.licenta}"/>
      <bootclasspath refid="licenta.module.bootclasspath"/>
      <classpath refid="licenta.module.production.classpath"/>
      <src refid="licenta.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.licenta"/>
    </javac2>
    
    <copy todir="${licenta.output.dir}">
      <fileset dir="${module.licenta.basedir}/src/main/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.licenta.basedir}/src/main/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.licenta.tests" depends="register.custom.compilers,compile.module.licenta.production" description="compile module licenta; test classes" unless="skip.tests">
    <mkdir dir="${licenta.testoutput.dir}"/>
    <javac2 destdir="${licenta.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.licenta}/javac">
      <compilerarg line="${compiler.args.licenta}"/>
      <bootclasspath refid="licenta.module.bootclasspath"/>
      <classpath refid="licenta.module.classpath"/>
      <src refid="licenta.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.licenta"/>
    </javac2>
    
    <copy todir="${licenta.testoutput.dir}">
      <fileset dir="${module.licenta.basedir}/src/test/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.licenta" description="cleanup module">
    <delete dir="${licenta.output.dir}"/>
    <delete dir="${licenta.testoutput.dir}"/>
  </target>
</project>